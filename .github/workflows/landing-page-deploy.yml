name: Deploy to Vercel

on:
  push:
    branches:
      - '**' # This will run the workflow on all branches
  workflow_dispatch: # This allows manual triggering of the workflow

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' # Adjust based on your project requirements

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Dependencies
        run: |
          cd 'landing page/murmura-landing'
          pnpm install

      - name: Install Vercel CLI
        run: pnpm add -g vercel

      # Set environment variable to determine if this is production or preview
      - name: Set deployment environment
        id: deployment_env
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" || "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "VERCEL_ENV=production" >> $GITHUB_ENV
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "VERCEL_ENV=preview" >> $GITHUB_ENV
            echo "environment=preview" >> $GITHUB_OUTPUT
          fi

      # Pull environment information based on environment type
      - name: Pull Vercel Environment Information
        run: |
          cd 'landing page/murmura-landing'
          vercel pull --yes --environment=${{ env.VERCEL_ENV }} --token=${{ secrets.VERCEL_TOKEN }}

      # Build project (use different flags based on environment)
      - name: Build Project Artifacts
        run: |
          cd 'landing page/murmura-landing'
          if [[ "${{ env.VERCEL_ENV }}" == "production" ]]; then
            vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi

      # Deploy to Vercel (use different flags based on environment)
      - name: Deploy to Vercel
        id: deploy
        run: |
          cd 'landing page/murmura-landing'
          if [[ "${{ env.VERCEL_ENV }}" == "production" ]]; then
            URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          else
            URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          fi
          echo "url=$URL" >> $GITHUB_OUTPUT

      # Output the deployment URL as a comment on the commit
      - name: Comment on commit
        uses: peter-evans/commit-comment@v3
        with:
          body: |
            ðŸš€ Deployed to Vercel!
            
            Environment: ${{ steps.deployment_env.outputs.environment }}
            URL: ${{ steps.deploy.outputs.url }}